{"version":3,"sources":["hooks/useBevis.ts","components/ChatRoom.tsx","components/AppContainer.tsx","utils/firebaseConfig.ts","assets/svv.svg","components/FireBaseLogo.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useCollection","props","useState","alleBevis","setAlleBevis","recentMessagesQuery","query","collection","getFirestore","orderBy","limit","useEffect","unsub","onSnapshot","snapshot","updatedItems","docs","map","data","id","navn","bevisnummer","fodselsaar","gyldigFra","gyldigTil","kjonn","kommunenummer","sendMessage","nyttBevis","a","addDoc","brukerkode","ChatRoom","useBevis","newBevis","setNewBevis","Container","className","Form","onSubmit","e","preventDefault","AppContainer","children","fluid","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","useFirebase","SvvLogo","width","height","src","logo","alt","Header","actions","Navbar","fixed","expand","Brand","Text","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a81b970.chunk.js","sourcesContent":["import {\n    query,\n    collection,\n    getFirestore,\n    orderBy,\n    limit,\n    onSnapshot,\n    addDoc,\n} from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\n\ninterface UseCollectionProps {\n    collection: string;\n    orderBy: string;\n}\n\nexport interface Bevis {\n    id: string;\n    navn: string;\n    bevisnummer: string;\n    brukerkode: string;\n    fodselsaar: string;\n    gyldigFra: string;\n    gyldigTil: string;\n    kjonn: string;\n    kommunenummer: string;\n}\n\nconst useCollection = (props: UseCollectionProps) => {\n    const [alleBevis, setAlleBevis] = useState<Bevis[]>([]);\n    const recentMessagesQuery = query(\n        collection(getFirestore(), props.collection),\n        orderBy(props.orderBy, \"asc\"),\n        limit(25)\n    );\n\n    useEffect(() => {\n        const unsub = onSnapshot(recentMessagesQuery, snapshot => {\n            const updatedItems = snapshot.docs.map(snapshot => {\n                const data = snapshot.data();\n                const res = {\n                    id: snapshot.id,\n                    navn: data.navn,\n                    bevisnummer: data.bevisnummer,\n                    fodselsaar: data.fodselsaar,\n                    gyldigFra: data.gyldigFra,\n                    gyldigTil: data.gyldigTil,\n                    kjonn: data.kjonn,\n                    kommunenummer: data.kommunenummer,\n                } as Bevis;\n                return res;\n            });\n            setAlleBevis(updatedItems);\n        });\n\n        return () => {\n            unsub();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const sendMessage = async (nyttBevis: Bevis) => {\n        await addDoc(collection(getFirestore(), \"bevis\"), {\n            navn: nyttBevis.navn,\n            bevisnummer: nyttBevis.bevisnummer,\n            brukerkode: nyttBevis.brukerkode,\n            fodselsaar: nyttBevis.fodselsaar,\n            gyldigFra: nyttBevis.gyldigFra,\n            gyldigTil: nyttBevis.gyldigTil,\n            kjonn: nyttBevis.kjonn,\n            kommunenummer: nyttBevis.kommunenummer,\n        } as Bevis);\n    };\n\n    return { alleBevis, sendMessage };\n};\n\nexport default useCollection;\n","import React, { useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport useBevis, { Bevis } from \"../hooks/useBevis\";\n\nconst ChatRoom: React.FC = () => {\n    const { alleBevis, sendMessage } = useBevis({\n        collection: \"bevis\",\n        orderBy: \"date\",\n    });\n    const [newBevis, setNewBevis] = useState<Bevis>({} as Bevis);\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n\n        sendMessage(newBevis);\n        setNewBevis({} as Bevis);\n    };\n\n    return (\n        <>\n            <Container className='chat-room-container'>\n                <Container className='chat-messages-container'></Container>\n            </Container>\n            <Form onSubmit={handleSubmit}></Form>\n        </>\n    );\n};\n\nexport default ChatRoom;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst AppContainer: React.FC = ({ children }) => {\n    return (\n        <Container className='app' fluid='md'>\n            {children}\n        </Container>\n    );\n};\n\nexport default AppContainer;\n","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC1iSCcIYk--pCS_GRIobVT60XEs2WL1QY\",\n    authDomain: \"svv-hc-reg.firebaseapp.com\",\n    projectId: \"svv-hc-reg\",\n    storageBucket: \"svv-hc-reg.appspot.com\",\n    messagingSenderId: \"689708862532\",\n    appId: \"1:689708862532:web:8e6cc6fbcf61b88f930011\",\n    measurementId: \"G-JRGCR03FTB\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst useFirebase = () => {\n    return firebaseApp;\n};\n\nexport default useFirebase;\n","export default __webpack_public_path__ + \"static/media/svv.850a7388.svg\";","import React from \"react\";\nimport logo from \"../assets/svv.svg\";\n\ninterface FirebaseLogoProps {\n    width: string;\n    height: string;\n}\n\nconst SvvLogo: React.FC<FirebaseLogoProps> = ({ width, height }) => {\n    return (\n        <img\n            className='app-logo'\n            width={width}\n            height={height}\n            src={logo}\n            alt='Firebase logo'\n        />\n    );\n};\n\nexport default SvvLogo;\n","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport SvvLogo from \"./FireBaseLogo\";\n\ninterface HeaderProps {\n    actions?: React.ReactNode[];\n}\n\nconst Header: React.FC<HeaderProps> = ({ actions }) => {\n    return (\n        <Navbar fixed='top' expand='lg' className='app-header'>\n            <Container>\n                <Navbar.Brand>\n                    <SvvLogo width='150px' height='50px' />\n                </Navbar.Brand>\n                <Navbar.Text color='white'>Registeret</Navbar.Text>\n                {/* <Navbar.Collapse className='app-header-actions'>\n                    {actions?.map((action, i) => (\n                        <Navbar.Text key={i}>{action}</Navbar.Text>\n                    ))}\n                </Navbar.Collapse> */}\n            </Container>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","import ChatRoom from \"./components/ChatRoom\";\nimport AppContainer from \"./components/AppContainer\";\nimport useFirebase from \"./utils/firebaseConfig\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n    useFirebase();\n    return (\n        <>\n            <Header actions={[]} />\n            <AppContainer>\n                <ChatRoom />\n            </AppContainer>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}